<article class="baidu_pl">
		<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog"  data-mod=popu_307  data-dsm = "post" >
								<div class="article-copyright">
                  					<svg class="icon" title="CSDN认证原创" aria-hidden="true" style="width:53px; height: 18px; vertical-align: -4px;">
							<use xlink:href="#CSDN_Cert"></use>
					</svg>
                  					
					版权声明：看我干嘛? 你又没打算转载我的博客~					https://blog.csdn.net/wjh2622075127/article/details/79469443				</div>
								<link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f57960eb32.css" />
        								            <div id="content_views" class="markdown_views prism-atom-one-light">
							<!-- flowchart 箭头图标 勿删 -->
							<svg xmlns="http://www.w3.org/2000/svg" style="display: none;"><path stroke-linecap="round" d="M5,0 0,2.5 5,5z" id="raphael-marker-block" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path></svg>
							<p>&lt;&lt;算法竞赛入门经典-训练指南&gt;&gt;第二题.</p>

<p>也是一道贪心题目. 就如书上分析所说, 直觉告诉我们, 这道题用贪心.</p>

<p>书上一个我不曾了解的知识点:</p>

<blockquote>
  <p>向vector v中压入一个Job(自定义结构体)变量 <br>
  v.push_back((Job){a, b});</p>
</blockquote>

<p>原Job</p>



<pre class="prettyprint"><code class=" hljs cs"><span class="hljs-keyword">struct</span> Job { <span class="hljs-keyword">int</span> a, b; };</code></pre>

<p>似乎不用写构造函数就可以构造一个Job变量.</p>

<p>想了想之前忘得差不多的类的知识, 写了个构造, 所以以下这样也可以</p>

<pre class="prettyprint"><code class=" hljs cs"><span class="hljs-keyword">struct</span> Job {  <span class="hljs-comment">//这是结构体</span>
    <span class="hljs-keyword">int</span> a, b;
    Job(<span class="hljs-keyword">int</span> a, <span class="hljs-keyword">int</span> b) : a(a), b(b){}
};</code></pre>



<pre class="prettyprint"><code class=" hljs livecodeserver">v.push_back(Job(<span class="hljs-operator">a</span>, b)); <span class="hljs-comment"> //这是压入操作</span></code></pre>

<p>pair, make_pair什么的给忘掉了…… <br>
等会补回来</p>

<p>一下完整代码</p>

<pre class="prettyprint"><code class=" hljs cpp"><span class="hljs-preprocessor">#include &lt;cstdio&gt;</span>
<span class="hljs-preprocessor">#include &lt;algorithm&gt;</span>
<span class="hljs-preprocessor">#include &lt;vector&gt;</span>

<span class="hljs-keyword">struct</span> Job {
    <span class="hljs-keyword">int</span> a, b;
    Job(<span class="hljs-keyword">int</span> a, <span class="hljs-keyword">int</span> b) : a(a), b(b){}
};

<span class="hljs-keyword">bool</span> cmp(Job a, Job b)
{
    <span class="hljs-keyword">return</span> a.b &gt; b.b;
}

<span class="hljs-keyword">int</span> main()
{
    <span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;
    <span class="hljs-keyword">int</span> n, cnt = <span class="hljs-number">0</span>;
    <span class="hljs-keyword">while</span>(<span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%d"</span>, &amp;n) == <span class="hljs-number">1</span> &amp;&amp; n) {
        <span class="hljs-stl_container"><span class="hljs-built_in">vector</span> &lt;Job&gt;</span> v;
        <span class="hljs-keyword">int</span> a, b;
        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; n; ++i) {
            <span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%d %d"</span>, &amp;a, &amp;b);
            v.push_back(Job(a, b));
        }
        sort(v.begin(), v.end(), cmp);
        <span class="hljs-keyword">int</span> ans = <span class="hljs-number">0</span>, now = <span class="hljs-number">0</span>;
        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; n; ++i) {
            now += v[i].a;
            ans = max(ans, now + v[i].b);
        }
        <span class="hljs-built_in">printf</span>(<span class="hljs-string">"Case %d : %d\n"</span>, ++cnt, ans); 
    }
}

<span class="hljs-comment">/*
3
2 5
3 2
2 1
3
3 3
4 4
5 5
0
*/</span> </code></pre>            </div>
						<link href="https://csdnimg.cn/release/phoenix/mdeditor/markdown_views-258a4616f7.css" rel="stylesheet">
                      </div>
	</article>