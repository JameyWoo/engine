<article class="baidu_pl">
		<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog"  data-mod=popu_307  data-dsm = "post" >
								<div class="article-copyright">
                  					<svg class="icon" title="CSDN认证原创" aria-hidden="true" style="width:53px; height: 18px; vertical-align: -4px;">
							<use xlink:href="#CSDN_Cert"></use>
					</svg>
                  					
					版权声明：看我干嘛? 你又没打算转载我的博客~					https://blog.csdn.net/wjh2622075127/article/details/79465475				</div>
								<link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f57960eb32.css" />
        								            <div id="content_views" class="markdown_views prism-atom-one-light">
							<!-- flowchart 箭头图标 勿删 -->
							<svg xmlns="http://www.w3.org/2000/svg" style="display: none;"><path stroke-linecap="round" d="M5,0 0,2.5 5,5z" id="raphael-marker-block" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path></svg>
							<p>&lt;&lt;算法竞赛入门经典-训练指南&gt;&gt;第一道题目.</p>

<p>被这本书吓到了, 以为都是难题. 这道题不难, 思路是贪心.</p>

<p>时间复杂度也只有O(n)</p>

<p>第一个版本核心部分虽然是二重循环嵌套, 但私以为有if控制条件, 实际上计算量是O(n)的.</p>



<pre class="prettyprint"><code class=" hljs cpp"><span class="hljs-preprocessor">#include &lt;bits/stdc++.h&gt;</span>
<span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;

<span class="hljs-keyword">void</span> loop(<span class="hljs-keyword">int</span> n, <span class="hljs-keyword">int</span> m)
{
    <span class="hljs-keyword">int</span> *a = <span class="hljs-keyword">new</span> <span class="hljs-keyword">int</span> [n], *b = <span class="hljs-keyword">new</span> <span class="hljs-keyword">int</span> [m];
    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; n; ++i) 
        <span class="hljs-built_in">cin</span> &gt;&gt; a[i];
    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; m; ++j)
        <span class="hljs-built_in">cin</span> &gt;&gt; b[j];
    sort(a, a + n);
    sort(b, b + m);
    <span class="hljs-keyword">int</span> ans = <span class="hljs-number">0</span>, flag = <span class="hljs-number">0</span>;
    <span class="hljs-keyword">bool</span> f = <span class="hljs-number">0</span>;
    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; n; ++i) {
        f = <span class="hljs-number">0</span>;
        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j = flag; j &lt; m; ++j) {
            <span class="hljs-keyword">if</span>(b[j] &gt;= a[i]) {
                f = <span class="hljs-number">1</span>;
                flag = j + <span class="hljs-number">1</span>;
                ans += b[j];
                <span class="hljs-keyword">break</span>;
            }
        }
    }
    <span class="hljs-keyword">if</span>(!f) <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">"Loowater is doomed!\n"</span>;
    <span class="hljs-keyword">else</span> <span class="hljs-built_in">cout</span> &lt;&lt; ans &lt;&lt; endl;
}

<span class="hljs-keyword">int</span> main()
{
    <span class="hljs-keyword">int</span> n, m;
    <span class="hljs-keyword">while</span>(<span class="hljs-built_in">cin</span> &gt;&gt; n &gt;&gt; m &amp;&amp; n != <span class="hljs-number">0</span>) {
        loop(n, m);
    }
}

<span class="hljs-comment">/*
2 3
5 4 7 8 4
2 1
5 5 10
0 0
*/</span></code></pre>

<p>第二版本是借鉴了书上的, 时间复杂度只有O(m).</p>

<p>这种思维或是解题方法算是很巧妙了.</p>

<p>两数组都排下序, 然后从小到大相互比较. 同时根据条件移动.</p>



<pre class="prettyprint"><code class=" hljs cpp"><span class="hljs-preprocessor">#include &lt;bits/stdc++.h&gt;</span>
<span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;

<span class="hljs-keyword">void</span> loop(<span class="hljs-keyword">int</span> n, <span class="hljs-keyword">int</span> m)
{
    <span class="hljs-keyword">int</span> *a = <span class="hljs-keyword">new</span> <span class="hljs-keyword">int</span> [n], *b = <span class="hljs-keyword">new</span> <span class="hljs-keyword">int</span> [m];
    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; n; ++i) 
        <span class="hljs-built_in">cin</span> &gt;&gt; a[i];
    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; m; ++j)
        <span class="hljs-built_in">cin</span> &gt;&gt; b[j];
    sort(a, a + n);
    sort(b, b + m);
    <span class="hljs-keyword">int</span> cnt = <span class="hljs-number">0</span>, ans = <span class="hljs-number">0</span>, flag = <span class="hljs-number">0</span>;
    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; m; ++i) {
        <span class="hljs-keyword">if</span>(b[i] &gt;= a[cnt++]) {
            ans += b[i];
            <span class="hljs-keyword">if</span>(cnt == n) {
                flag = <span class="hljs-number">1</span>;
                <span class="hljs-keyword">break</span>;
            }
        }   
    }
    <span class="hljs-keyword">if</span>(flag) <span class="hljs-built_in">cout</span> &lt;&lt; ans &lt;&lt; endl;
    <span class="hljs-keyword">else</span> <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">"Loowater is doomed!\n"</span>;
}

<span class="hljs-keyword">int</span> main()
{
    <span class="hljs-keyword">int</span> n, m;
    <span class="hljs-keyword">while</span>(<span class="hljs-built_in">cin</span> &gt;&gt; n &gt;&gt; m &amp;&amp; n != <span class="hljs-number">0</span>) {
        loop(n, m);
    }
}

<span class="hljs-comment">/*
2 3
5 4 7 8 4
2 1
5 5 10
0 0
*/</span></code></pre>            </div>
						<link href="https://csdnimg.cn/release/phoenix/mdeditor/markdown_views-258a4616f7.css" rel="stylesheet">
                      </div>
	</article>