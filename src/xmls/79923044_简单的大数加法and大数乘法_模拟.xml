<article class="baidu_pl">
		<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog"  data-mod=popu_307  data-dsm = "post" >
								<div class="article-copyright">
                  					<svg class="icon" title="CSDN认证原创" aria-hidden="true" style="width:53px; height: 18px; vertical-align: -4px;">
							<use xlink:href="#CSDN_Cert"></use>
					</svg>
                  					
					版权声明：看我干嘛? 你又没打算转载我的博客~					https://blog.csdn.net/wjh2622075127/article/details/79923044				</div>
								<link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f57960eb32.css" />
        								            <div id="content_views" class="markdown_views prism-atom-one-light">
							<!-- flowchart 箭头图标 勿删 -->
							<svg xmlns="http://www.w3.org/2000/svg" style="display: none;"><path stroke-linecap="round" d="M5,0 0,2.5 5,5z" id="raphael-marker-block" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path></svg>
							<p>加法</p>



<pre class="prettyprint"><code class=" hljs cpp"><span class="hljs-preprocessor">#include &lt;iostream&gt;</span>
<span class="hljs-preprocessor">#include &lt;string&gt;</span>
<span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;

<span class="hljs-keyword">int</span> main()
{
    <span class="hljs-built_in">string</span> a, b;
    <span class="hljs-built_in">cin</span> &gt;&gt; a &gt;&gt; b;
    <span class="hljs-keyword">int</span> ia = a.size(), ib = b.size();
    <span class="hljs-keyword">int</span> cha[<span class="hljs-number">505</span>] = {}, chb[<span class="hljs-number">505</span>] = {};
    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">500</span>; i &gt; <span class="hljs-number">500</span> - a.size(); --i) {
        cha[i] = a[--ia] - <span class="hljs-string">'0'</span>;
    }
    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">500</span>; i &gt; <span class="hljs-number">500</span> - b.size(); --i) {
        chb[i] = b[--ib] - <span class="hljs-string">'0'</span>;
    }
    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">500</span>; i &gt;= <span class="hljs-number">0</span>; --i) {
        cha[i] += chb[i];
        <span class="hljs-keyword">if</span>(cha[i] &gt; <span class="hljs-number">9</span>) {
            cha[i] -= <span class="hljs-number">10</span>;
            cha[i - <span class="hljs-number">1</span>] ++;
        } 
    }
    <span class="hljs-keyword">int</span> k = <span class="hljs-number">0</span>;
    <span class="hljs-keyword">while</span>(cha[k] == <span class="hljs-number">0</span> &amp;&amp; k != <span class="hljs-number">500</span>) k++;
    <span class="hljs-keyword">while</span>(k &lt;= <span class="hljs-number">500</span>) {
        <span class="hljs-built_in">cout</span> &lt;&lt; cha[k];
        k++;
    }
}</code></pre>

<p>乘法</p>



<pre class="prettyprint"><code class=" hljs mel">#include &lt;iostream&gt;
#include &lt;<span class="hljs-keyword">string</span>&gt;
using <span class="hljs-keyword">namespace</span> std;

<span class="hljs-keyword">int</span> main()
{
    <span class="hljs-keyword">string</span> a, b;
    cin &gt;&gt; a &gt;&gt; b;
    <span class="hljs-keyword">int</span> ia = a.<span class="hljs-keyword">size</span>(), ib = b.<span class="hljs-keyword">size</span>(), k = <span class="hljs-number">0</span>, ans[<span class="hljs-number">1005</span>] = {};
    <span class="hljs-keyword">int</span> cha[<span class="hljs-number">505</span>] = {}, chb[<span class="hljs-number">505</span>] = {};
    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">500</span>; i &gt; <span class="hljs-number">500</span> - a.<span class="hljs-keyword">size</span>(); --i) {
        cha[i] = a[--ia] - <span class="hljs-string">'0'</span>;
    }
    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">500</span>; i &gt; <span class="hljs-number">500</span> - b.<span class="hljs-keyword">size</span>(); --i) {
        chb[i] = b[--ib] - <span class="hljs-string">'0'</span>;
    }
    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">500</span>; i &gt; <span class="hljs-number">500</span> - a.<span class="hljs-keyword">size</span>(); i--) {
        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j = <span class="hljs-number">500</span>; j &gt; <span class="hljs-number">500</span> - b.<span class="hljs-keyword">size</span>(); j--) {
            ans[i + j] += cha[i]<span class="hljs-variable">*chb</span>[j];
        }
    }
    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1000</span>; i &gt; <span class="hljs-number">0</span>; --i) {
        ans[i - <span class="hljs-number">1</span>] += ans[i] / <span class="hljs-number">10</span>;
        ans[i] <span class="hljs-variable">%=</span> <span class="hljs-number">10</span>;
    }
    <span class="hljs-keyword">while</span>(ans[k] == <span class="hljs-number">0</span> &amp;&amp; k != <span class="hljs-number">1000</span>) k++;
    <span class="hljs-keyword">while</span>(k &lt;= <span class="hljs-number">1000</span>) {
        cout &lt;&lt; ans[k];
        k++;
    }
}</code></pre>            </div>
						<link href="https://csdnimg.cn/release/phoenix/mdeditor/markdown_views-258a4616f7.css" rel="stylesheet">
                      </div>
	</article>