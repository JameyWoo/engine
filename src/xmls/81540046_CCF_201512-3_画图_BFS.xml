<article class="baidu_pl">
		<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog"  data-mod=popu_307  data-dsm = "post" >
								<div class="article-copyright">
                  					<svg class="icon" title="CSDN认证原创" aria-hidden="true" style="width:53px; height: 18px; vertical-align: -4px;">
							<use xlink:href="#CSDN_Cert"></use>
					</svg>
                  					
					版权声明：看我干嘛? 你又没打算转载我的博客~					https://blog.csdn.net/wjh2622075127/article/details/81540046				</div>
								<link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f57960eb32.css" />
        								            <div id="content_views" class="markdown_views prism-atom-one-light">
							<!-- flowchart 箭头图标 勿删 -->
							<svg xmlns="http://www.w3.org/2000/svg" style="display: none;"><path stroke-linecap="round" d="M5,0 0,2.5 5,5z" id="raphael-marker-block" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path></svg>
							<p>CCF 201512-3 画图 <a href="http://118.190.20.162/view.page?gpid=T35" rel="nofollow">传送门</a></p>

<p>模拟, 还带了个BFS, 比较简单. 但是第一次提交只得了90分. 因为在判断交点的时候, 考虑了 <code>-</code>遇到<code>|</code> 和 <code>|</code>遇到<code>-</code> 的情况却没考虑<code>|</code>和<code>-</code>遇到<code>+</code>的情况, 真是蠢哉, 蠢哉.</p>

<pre class="prettyprint"><code class=" hljs cpp"><span class="hljs-preprocessor">#include &lt;algorithm&gt;</span>
<span class="hljs-preprocessor">#include &lt;iostream&gt;</span>
<span class="hljs-preprocessor">#include &lt;vector&gt;</span>
<span class="hljs-preprocessor">#include &lt;queue&gt;</span>
<span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;

<span class="hljs-keyword">int</span> move[<span class="hljs-number">4</span>][<span class="hljs-number">2</span>] = {{-<span class="hljs-number">1</span>, <span class="hljs-number">0</span>}, {<span class="hljs-number">1</span>, <span class="hljs-number">0</span>}, {<span class="hljs-number">0</span>, -<span class="hljs-number">1</span>}, {<span class="hljs-number">0</span>, <span class="hljs-number">1</span>}};
<span class="hljs-keyword">int</span> n, m, q, cmd;

<span class="hljs-keyword">void</span> bfs(<span class="hljs-keyword">char</span> <span class="hljs-built_in">map</span>[<span class="hljs-number">100</span>][<span class="hljs-number">100</span>], <span class="hljs-keyword">int</span> x, <span class="hljs-keyword">int</span> y, <span class="hljs-keyword">char</span> ch)
{
    <span class="hljs-keyword">int</span> vis[<span class="hljs-number">100</span>][<span class="hljs-number">100</span>] = {};
    <span class="hljs-stl_container"><span class="hljs-built_in">queue</span>&lt;<span class="hljs-keyword">int</span>&gt;</span> Qx, Qy;
    Qx.push(x), Qy.push(y);
    vis[x][y] = <span class="hljs-keyword">true</span>;
    <span class="hljs-built_in">map</span>[x][y] = ch;
    <span class="hljs-keyword">while</span> (!Qx.empty()) {
        <span class="hljs-keyword">int</span> u = Qx.front(), v = Qy.front();
        Qx.pop(), Qy.pop();
        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; ++i) {
            <span class="hljs-keyword">int</span> uu = u + move[i][<span class="hljs-number">0</span>], vv = v + move[i][<span class="hljs-number">1</span>];
            <span class="hljs-keyword">if</span> (uu &lt; <span class="hljs-number">0</span> || uu &gt;= n || vv &lt; <span class="hljs-number">0</span> || vv &gt;= m) <span class="hljs-keyword">continue</span>;
            <span class="hljs-keyword">if</span> (<span class="hljs-built_in">map</span>[uu][vv] == <span class="hljs-string">'-'</span> || <span class="hljs-built_in">map</span>[uu][vv] == <span class="hljs-string">'+'</span> || <span class="hljs-built_in">map</span>[uu][vv] == <span class="hljs-string">'|'</span>) <span class="hljs-keyword">continue</span>;
            <span class="hljs-keyword">if</span> (vis[uu][vv]) <span class="hljs-keyword">continue</span>;
            vis[uu][vv] = <span class="hljs-keyword">true</span>;
            Qx.push(uu), Qy.push(vv);
            <span class="hljs-built_in">map</span>[uu][vv] = ch;
        }
    }
}

<span class="hljs-keyword">int</span> main()
{
    <span class="hljs-keyword">char</span> <span class="hljs-built_in">map</span>[<span class="hljs-number">100</span>][<span class="hljs-number">100</span>];
    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">100</span>; ++i) {
        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">100</span>; ++j) {
            <span class="hljs-built_in">map</span>[i][j] = <span class="hljs-string">'.'</span>;
        }
    }
    <span class="hljs-built_in">cin</span> &gt;&gt; n &gt;&gt; m &gt;&gt; q;
    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> qu = <span class="hljs-number">0</span>; qu &lt; q; ++qu) {
        <span class="hljs-built_in">cin</span> &gt;&gt; cmd;
        <span class="hljs-keyword">if</span> (cmd == <span class="hljs-number">1</span>) {
            <span class="hljs-keyword">int</span> x, y;
            <span class="hljs-keyword">char</span> c;
            <span class="hljs-built_in">cin</span> &gt;&gt; x &gt;&gt; y &gt;&gt; c;
            bfs(<span class="hljs-built_in">map</span>, x, y, c);
        } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (cmd == <span class="hljs-number">0</span>) {
            <span class="hljs-keyword">int</span> x1, y1, x2, y2;
            <span class="hljs-built_in">cin</span> &gt;&gt; x1 &gt;&gt; y1 &gt;&gt; x2 &gt;&gt; y2;
            <span class="hljs-keyword">if</span> (y1 == y2) { <span class="hljs-comment">// 横线, 用'-'表示</span>
                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = min(x1, x2); i &lt;= max(x1, x2); ++i) {
                    <span class="hljs-keyword">if</span> (<span class="hljs-built_in">map</span>[i][y1] == <span class="hljs-string">'|'</span>) <span class="hljs-built_in">map</span>[i][y1] = <span class="hljs-string">'+'</span>;
                    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-built_in">map</span>[i][y1] == <span class="hljs-string">'+'</span>) <span class="hljs-keyword">continue</span>; <span class="hljs-comment">//靠, 漏掉了这个,10分.</span>
                    <span class="hljs-keyword">else</span> <span class="hljs-built_in">map</span>[i][y1] = <span class="hljs-string">'-'</span>;
                }
            } <span class="hljs-keyword">else</span> { <span class="hljs-comment">// 竖线, 用'|'表示</span>
                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = min(y1, y2); i &lt;= max(y1, y2); ++i) {
                    <span class="hljs-keyword">if</span> (<span class="hljs-built_in">map</span>[x1][i] == <span class="hljs-string">'-'</span>) <span class="hljs-built_in">map</span>[x1][i] = <span class="hljs-string">'+'</span>;
                    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-built_in">map</span>[x1][i] == <span class="hljs-string">'+'</span>) <span class="hljs-keyword">continue</span>;
                    <span class="hljs-keyword">else</span> <span class="hljs-built_in">map</span>[x1][i] = <span class="hljs-string">'|'</span>;
                }
            }
        }
    }
    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = m - <span class="hljs-number">1</span>; i &gt;= <span class="hljs-number">0</span>; --i) {
        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; n; ++j) {
            <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-built_in">map</span>[j][i];
        }
        <span class="hljs-built_in">cout</span> &lt;&lt; endl;
    }
}</code></pre>            </div>
						<link href="https://csdnimg.cn/release/phoenix/mdeditor/markdown_views-258a4616f7.css" rel="stylesheet">
                      </div>
	</article>