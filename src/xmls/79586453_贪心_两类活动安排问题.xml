<article class="baidu_pl">
		<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog"  data-mod=popu_307  data-dsm = "post" >
								<div class="article-copyright">
                  					<svg class="icon" title="CSDN认证原创" aria-hidden="true" style="width:53px; height: 18px; vertical-align: -4px;">
							<use xlink:href="#CSDN_Cert"></use>
					</svg>
                  					
					版权声明：看我干嘛? 你又没打算转载我的博客~					https://blog.csdn.net/wjh2622075127/article/details/79586453				</div>
								<link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f57960eb32.css" />
        								            <div id="content_views" class="markdown_views prism-atom-one-light">
							<!-- flowchart 箭头图标 勿删 -->
							<svg xmlns="http://www.w3.org/2000/svg" style="display: none;"><path stroke-linecap="round" d="M5,0 0,2.5 5,5z" id="raphael-marker-block" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path></svg>
							<p><strong>贪心算法</strong></p>

<p>活动安排问题算是典型的贪心问题了, 而且也和生活紧密联系.</p>

<p>活动安排问题有<strong>两种</strong>非常相近的形式, 贪的方法也很相似. <br>
因为之前做过期中一个问题, 做第二种问题时转不过思维来, 卡在那不知道怎么做.</p>

<p>手动模拟的时候, 突然明白过来, 靠, 原来是这样!!!</p>

<p><strong>先分析第一题</strong>:</p>

<blockquote>
  <p>有若干个活动，第i个开始时间和结束时间是[Si,fi)，只有一个教室, 请问最多可以安排多少个活动?</p>
</blockquote>

<p>思路:</p>

<blockquote>
  <p>把它的fi排序, 然后从小到大遍历可能的活动. 结果就是最大的活动数.</p>
</blockquote>

<p>这题比较简单, 不提供代码</p>

<p><strong>分析第二题</strong>:</p>

<blockquote>
  <p>有若干个活动，第i个开始时间和结束时间是(Si,fi),同一个教室安排的活动之间不能交叠，求要安排所有活动，最少需要几个教室？</p>
</blockquote>

<p>这道题思考了很久, 就是不知道怎么贪心最好. <br>
试着用第一题的思路, 每次把剩余的活动加入到教室, 直到没有活动为止, 看用了多少个教室.</p>

<p>思路是:</p>

<blockquote>
  <p>把每一个活动时间接到结束时间最近的时间序列(教室数), 不能接就另开新行. <br>
  具体理解还要做一做图模拟模拟.</p>
</blockquote>

<p>代码</p>



<pre class="prettyprint"><code class=" hljs cpp"><span class="hljs-preprocessor">#include &lt;iostream&gt;</span>
<span class="hljs-preprocessor">#include &lt;queue&gt;</span>
<span class="hljs-preprocessor">#include &lt;algorithm&gt;</span>
<span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;

<span class="hljs-keyword">struct</span> th {<span class="hljs-keyword">int</span> s, e; } arr[<span class="hljs-number">10005</span>];

<span class="hljs-keyword">bool</span> cmp(th x, th y) {<span class="hljs-keyword">return</span> x.s &lt; y.s;}

<span class="hljs-keyword">int</span> main()
{
    <span class="hljs-keyword">int</span> n;
    <span class="hljs-built_in">cin</span> &gt;&gt; n;
    priority_queue&lt;<span class="hljs-keyword">int</span>,<span class="hljs-stl_container"><span class="hljs-built_in">vector</span>&lt;<span class="hljs-keyword">int</span>&gt;</span>, greater&lt;<span class="hljs-keyword">int</span>&gt; &gt; myqueue;
    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; n; ++i) {
        <span class="hljs-built_in">cin</span> &gt;&gt; arr[i].s &gt;&gt; arr[i].e;
    }
    sort(arr, arr+n, cmp);
    <span class="hljs-keyword">int</span> ans = <span class="hljs-number">1</span>;
    myqueue.push(arr[<span class="hljs-number">0</span>].e);
    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt; n; ++i) {
        <span class="hljs-keyword">if</span>(arr[i].s &lt; myqueue.top()) {
            ans++;
            myqueue.push(arr[i].e);
        } <span class="hljs-keyword">else</span> {
            myqueue.pop();
            myqueue.push(arr[i].e);
        }
    }
    <span class="hljs-built_in">cout</span> &lt;&lt; ans;
}
<span class="hljs-comment">/*
4
1 3
2 5
3 4
6 8
*/</span></code></pre>

<p>这个代码中使用了优先队列, 默认的优先队列是大的优先级最大, 此例可以调整.</p>

<blockquote>
  <p>priority_queue&lt; int,vector, greater &gt; myqueue;  //从小到大 <br>
  priority_queue&lt; int,vector, less &gt; myqueue;  //从大到小（默认）</p>
</blockquote>

<p>int 是可换的。</p>

<p>至于这道题问什么这么贪心，改变顺序分析一下，会发现不会有更优解。</p>

<p></p>            </div>
						<link href="https://csdnimg.cn/release/phoenix/mdeditor/markdown_views-258a4616f7.css" rel="stylesheet">
                      </div>
	</article>