<article class="baidu_pl">
		<div id="article_content" class="article_content clearfix csdn-tracking-statistics" data-pid="blog"  data-mod=popu_307  data-dsm = "post" >
								<div class="article-copyright">
                  					<svg class="icon" title="CSDN认证原创" aria-hidden="true" style="width:53px; height: 18px; vertical-align: -4px;">
							<use xlink:href="#CSDN_Cert"></use>
					</svg>
                  					
					版权声明：看我干嘛? 你又没打算转载我的博客~					https://blog.csdn.net/wjh2622075127/article/details/81486776				</div>
								<link rel="stylesheet" href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-f57960eb32.css" />
        								            <div id="content_views" class="markdown_views prism-atom-one-light">
							<!-- flowchart 箭头图标 勿删 -->
							<svg xmlns="http://www.w3.org/2000/svg" style="display: none;"><path stroke-linecap="round" d="M5,0 0,2.5 5,5z" id="raphael-marker-block" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"></path></svg>
							<p><a href="http://118.190.20.162/view.page?gpid=T50" rel="nofollow">传送门</a></p>

<p>CCF第三题, 同样是一道非常复杂度模拟题, 要非常细心不要漏掉哪一点.</p>

<p>可惜我只得了90分, 没得满分, 找不出那10分是错在哪里了.</p>

<p>贴下90分代码</p>

<pre class="prettyprint"><code class=" hljs cpp"><span class="hljs-preprocessor">#include &lt;algorithm&gt;</span>
<span class="hljs-preprocessor">#include &lt;iostream&gt;</span>
<span class="hljs-preprocessor">#include &lt;vector&gt;</span>
<span class="hljs-preprocessor">#include &lt;map&gt;</span>
<span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;

<span class="hljs-keyword">void</span> show(<span class="hljs-stl_container"><span class="hljs-built_in">map</span>&lt;<span class="hljs-built_in">string</span>, <span class="hljs-keyword">int</span>&gt;</span> orig)
{
    <span class="hljs-stl_container"><span class="hljs-built_in">map</span>&lt;<span class="hljs-built_in">string</span>, <span class="hljs-keyword">int</span>&gt;</span>::iterator im = orig.begin();
    <span class="hljs-keyword">while</span> (im != orig.end()) {
        <span class="hljs-built_in">cout</span> &lt;&lt; im-&gt;first &lt;&lt; <span class="hljs-string">" : "</span> &lt;&lt; im-&gt;second &lt;&lt; endl;
        im++;
    }
}

<span class="hljs-keyword">int</span> main()
{
    <span class="hljs-keyword">int</span> p;
    <span class="hljs-built_in">cin</span> &gt;&gt; p;
    <span class="hljs-built_in">string</span> category;
    <span class="hljs-stl_container"><span class="hljs-built_in">map</span>&lt;<span class="hljs-built_in">string</span>, <span class="hljs-keyword">int</span>&gt;</span> orig; <span class="hljs-comment">// 保存所有的权限.(原始) </span>
    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>, j; i &lt; p; ++i) {
        <span class="hljs-built_in">cin</span> &gt;&gt; category;
        j = category.size();
        <span class="hljs-keyword">if</span> (category[j - <span class="hljs-number">2</span>] == <span class="hljs-string">':'</span>) {
            <span class="hljs-built_in">string</span> tmp;
            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> k = <span class="hljs-number">0</span>; k &lt; j - <span class="hljs-number">2</span>; ++k)
                tmp += category[k];
            orig[tmp] = category[j - <span class="hljs-number">1</span>] - <span class="hljs-string">'0'</span>;
        } <span class="hljs-keyword">else</span> orig[category] = -<span class="hljs-number">1</span>;
    }
    <span class="hljs-keyword">int</span> r;
    <span class="hljs-built_in">cin</span> &gt;&gt; r;
    <span class="hljs-built_in">string</span> ident, categ;
    <span class="hljs-stl_container"><span class="hljs-built_in">map</span>&lt;<span class="hljs-built_in">string</span>, <span class="hljs-stl_container"><span class="hljs-built_in">map</span>&lt;<span class="hljs-built_in">string</span>, <span class="hljs-keyword">int</span>&gt;</span> &gt;</span>man;
    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>, num; i &lt; r; ++i) {
        <span class="hljs-built_in">cin</span> &gt;&gt; ident &gt;&gt; num;
        <span class="hljs-stl_container"><span class="hljs-built_in">map</span>&lt;<span class="hljs-built_in">string</span>, <span class="hljs-keyword">int</span>&gt;</span> tmp;
        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; num; ++j) {
            <span class="hljs-built_in">cin</span> &gt;&gt; categ;
            <span class="hljs-keyword">int</span> t = categ.size();
            <span class="hljs-keyword">if</span> (categ[t - <span class="hljs-number">2</span>] == <span class="hljs-string">':'</span>) {
                <span class="hljs-built_in">string</span> temp;
                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> k = <span class="hljs-number">0</span>; k &lt; t - <span class="hljs-number">2</span>; ++k)
                    temp += categ[k];
                tmp[temp] = categ[t - <span class="hljs-number">1</span>] - <span class="hljs-string">'0'</span>;
            } <span class="hljs-keyword">else</span> tmp[categ] = -<span class="hljs-number">1</span>;
        }
        man[ident] = tmp;
    }
    <span class="hljs-comment">/*cout &lt;&lt; "-----------------------------" &lt;&lt; endl;
    map&lt;string, map&lt;string, int&gt; &gt;::iterator im = man.begin();
    while (im != man.end()) {
        cout &lt;&lt; im-&gt;first &lt;&lt; endl;
        show(im-&gt;second);
        cout &lt;&lt; endl;
        im++;
    }*/</span>
    <span class="hljs-keyword">int</span> u, t;
    <span class="hljs-built_in">cin</span> &gt;&gt; u;
    <span class="hljs-built_in">string</span> name, job;
    <span class="hljs-stl_container"><span class="hljs-built_in">map</span>&lt;<span class="hljs-built_in">string</span>, <span class="hljs-stl_container"><span class="hljs-built_in">vector</span>&lt;<span class="hljs-built_in">string</span>&gt;</span> &gt;</span> user;
    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; u; ++i) {
        <span class="hljs-stl_container"><span class="hljs-built_in">vector</span>&lt;<span class="hljs-built_in">string</span>&gt;</span> tmp;
        <span class="hljs-built_in">cin</span> &gt;&gt; name;
        <span class="hljs-built_in">cin</span> &gt;&gt; t;
        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; t; ++j) {
            <span class="hljs-built_in">cin</span> &gt;&gt; job;
            tmp.push_back(job);
        }
        user[name] = tmp;
    }
    <span class="hljs-comment">/*cout &lt;&lt; "----------------------------\n";
    map&lt;string, vector&lt;string&gt; &gt;::iterator iu = user.begin();
    while (iu != user.end()) {
        for (int i = 0; i &lt; iu-&gt;second.size(); ++i) {
            cout &lt;&lt; iu-&gt;second[i] &lt;&lt; ' ';
        }
        cout &lt;&lt; endl;
        iu++;
    }
    cout &lt;&lt; "----------------------------\n";*/</span>
    <span class="hljs-keyword">int</span> q;
    <span class="hljs-built_in">cin</span> &gt;&gt; q;
    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; q; ++i) {
        <span class="hljs-built_in">cin</span> &gt;&gt; name &gt;&gt; categ;
        <span class="hljs-built_in">string</span> cmd; <span class="hljs-comment">// 权限名称 </span>
        <span class="hljs-keyword">int</span> level, l; <span class="hljs-comment">// 权限等级 </span>
        l = categ.size();
        <span class="hljs-keyword">if</span> (categ[l - <span class="hljs-number">2</span>] != <span class="hljs-string">':'</span>) cmd = categ, level = -<span class="hljs-number">1</span>;
        <span class="hljs-keyword">else</span> {
            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> k = <span class="hljs-number">0</span>; k &lt; l - <span class="hljs-number">2</span>; ++k)
                cmd += categ[k];
            level = categ[l - <span class="hljs-number">1</span>] - <span class="hljs-string">'0'</span>;
        }
        <span class="hljs-comment">//cout &lt;&lt; "name = " &lt;&lt; name &lt;&lt; "  cmd = " &lt;&lt; cmd &lt;&lt; endl;</span>
        <span class="hljs-keyword">if</span> (user.count(name) == <span class="hljs-number">0</span> || orig.count(cmd) == <span class="hljs-number">0</span>) {
            <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">"false"</span> &lt;&lt; endl;
            <span class="hljs-keyword">continue</span>;
        }
        <span class="hljs-stl_container"><span class="hljs-built_in">vector</span>&lt;<span class="hljs-built_in">string</span>&gt;</span> jobs = user[name];
        <span class="hljs-comment">/*cout &lt;&lt; "\n" &lt;&lt; name &lt;&lt; " : \n";
        for (int j = 0; j &lt; jobs.size(); ++j) {
            cout &lt;&lt; jobs[j] &lt;&lt; endl;
        }*/</span>
        <span class="hljs-comment">//cout &lt;&lt; "name = " &lt;&lt; name &lt;&lt; "  cmd = " &lt;&lt; cmd &lt;&lt; endl;</span>
        <span class="hljs-keyword">if</span> (level == -<span class="hljs-number">1</span>) { <span class="hljs-comment">// 查询本身没有等级 </span>
            <span class="hljs-keyword">if</span> (orig[cmd] == -<span class="hljs-number">1</span>) { <span class="hljs-comment">// 权限本身没有等级 </span>
                <span class="hljs-comment">//cout &lt;&lt; "again name = " &lt;&lt; name &lt;&lt; " cmd = " &lt;&lt; cmd &lt;&lt; endl;</span>
                <span class="hljs-keyword">bool</span> flag = <span class="hljs-keyword">false</span>; 
                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; jobs.size(); ++j) {
                    <span class="hljs-built_in">string</span> jb = jobs[j]; <span class="hljs-comment">// cao, 这里j写成i </span>
                    <span class="hljs-comment">//cout &lt;&lt; "jb = " &lt;&lt; jb &lt;&lt; endl;</span>
                    <span class="hljs-stl_container"><span class="hljs-built_in">map</span>&lt;<span class="hljs-built_in">string</span>, <span class="hljs-keyword">int</span>&gt;</span> now = man[jb];
                    <span class="hljs-keyword">if</span> (now.count(cmd) == <span class="hljs-number">1</span>) flag = <span class="hljs-keyword">true</span>;
                }
                <span class="hljs-keyword">if</span> (flag) <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">"true"</span> &lt;&lt; endl;
                <span class="hljs-keyword">else</span> <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">"false"</span> &lt;&lt; endl;
            } <span class="hljs-keyword">else</span> { <span class="hljs-comment">// 查询没有等级,但是实际上有等级 </span>
                <span class="hljs-keyword">int</span> lev = -<span class="hljs-number">1</span>;
                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; jobs.size(); ++j) {
                    <span class="hljs-built_in">string</span> jb = jobs[j];
                    <span class="hljs-stl_container"><span class="hljs-built_in">map</span>&lt;<span class="hljs-built_in">string</span>, <span class="hljs-keyword">int</span>&gt;</span> now = man[jb];
                    <span class="hljs-keyword">if</span> (now.count(cmd) == <span class="hljs-number">1</span>) {
                        lev = max(lev, now[cmd]);
                    }
                }
                <span class="hljs-keyword">if</span> (lev == -<span class="hljs-number">1</span>) {
                    <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">"false"</span> &lt;&lt; endl;
                } <span class="hljs-keyword">else</span> <span class="hljs-built_in">cout</span> &lt;&lt; lev &lt;&lt; endl;
            } 
        } <span class="hljs-keyword">else</span> {
            <span class="hljs-keyword">int</span> lev = -<span class="hljs-number">1</span>;
            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; jobs.size(); ++j) {
                <span class="hljs-built_in">string</span> jb = jobs[j];
                <span class="hljs-stl_container"><span class="hljs-built_in">map</span>&lt;<span class="hljs-built_in">string</span>, <span class="hljs-keyword">int</span>&gt;</span> now = man[jb];
                <span class="hljs-keyword">if</span> (now.count(cmd) == <span class="hljs-number">1</span>) {
                    lev = max(lev, now[cmd]);
                }
            }
            <span class="hljs-keyword">if</span> (lev &gt;= level &amp;&amp; lev != -<span class="hljs-number">1</span>) <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">"true"</span> &lt;&lt; endl;
            <span class="hljs-keyword">else</span> <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">"false"</span> &lt;&lt; endl;
        }
    }
}</code></pre>            </div>
						<link href="https://csdnimg.cn/release/phoenix/mdeditor/markdown_views-258a4616f7.css" rel="stylesheet">
                      </div>
	</article>