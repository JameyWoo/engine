                                                                                                                                                         某君有 nn 个互不相同的正整数，现在他要从这 nn 个正整数之中无重复地选取任意个数，并仅通过加法凑出整数 XX。求某君有多少种不同的方案来凑出整数 XX。  输入格式  第一行，输入两个整数 n,X(1 \leq n \leq 20, 1 \leq X \leq 2000)n,X(1≤n≤20,1≤X≤2000)。  接下来输入 nn 个整数，每个整数不超过 100100。  输出格式  输出一个整数，表示能凑出 XX 的方案数。  样例输入  6 6  1 2 3 4 5 6  样例输出  4  简单地展示下代码, 以后表示2的n次方可以不用pow了.  位运算还是非常的方便的.   在枚举子集方面(以及生成真值表)    #include &lt;iostream&gt; #include &lt;cmath&gt; using namespace std;  int main() {     int n, x, num[25] = {}, ans = 0;     cin &gt;&gt; n &gt;&gt; x;     for(int i = 0; i &lt; n; ++i) {         cin &gt;&gt; num[i];     }     for(int i = 0; i &lt; (1 &lt;&lt; n); ++i) {         int sum = 0;         for(int j = 0; j &lt; n; ++j) {             if(i &amp; (1 &lt;&lt; j)) sum += num[j];         }         if(sum == x) ans++;     }     cout &lt;&lt; ans; }                                            