                                                                                                                                                         .  参考  P1636 Einstein学画画  这道题据说是半欧拉图问题.   关于半欧拉图是什么     具有欧拉回路的图称为欧拉图，具有欧拉通路而无欧拉回路的图称为半欧拉图。   不过我觉得这道题有问题, 因为如果图中存在环, 或者说欧拉回路的话, 他就算错了, 不能解决这种问题.  不过做了这道题还是学到了不少, 对图有了更多的理解.  #include &lt;iostream&gt; using namespace std;  int main() {     int n, m, a[1005] = {}, ans = 0, x, y;     cin &gt;&gt; n &gt;&gt; m;     for(int i = 0; i &lt; m; ++i) {         cin &gt;&gt; x &gt;&gt; y;         a[x]++, a[y]++;     }     for(int i = 1; i &lt;= n; ++i) {         if(a[i]%2) ans++;     }     cout &lt;&lt; (ans ? ans/2 : 1); }  最开始的思路是用dfs判断图中一共有几个连通块, 结果值得了27/100分. 不知道是为什么.  以下是dfs代码    #include &lt;iostream&gt; #include &lt;vector&gt; using namespace std; vector &lt;int&gt; v[1005]; int vis[1005] = {};  void dfs(int n) {     for(int i = 0; i &lt; v[n].size(); ++i) {         if(vis[v[n][i]] == 0) {             vis[v[n][i]] = 1;             dfs(v[n][i]);         }     } }  int main() {     int n, m, x, y, ans = 0;     cin &gt;&gt; n &gt;&gt; m;     for(int i = 0; i &lt; m; ++i) {  //构造一张图          cin &gt;&gt; x &gt;&gt; y;         v[x].push_back(y);         v[y].push_back(x);     }     for(int i = 1; i &lt;= n; ++i) {         if(v[i].empty()) ans--;         if(vis[i] == 0) {             vis[i] = 1;             dfs(i);             ans++;         }     }     cout &lt;&lt; ans; }                                            