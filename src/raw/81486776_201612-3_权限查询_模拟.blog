                                                                                                                                                         传送门  CCF第三题, 同样是一道非常复杂度模拟题, 要非常细心不要漏掉哪一点.  可惜我只得了90分, 没得满分, 找不出那10分是错在哪里了.  贴下90分代码  #include &lt;algorithm&gt; #include &lt;iostream&gt; #include &lt;vector&gt; #include &lt;map&gt; using namespace std;  void show(map&lt;string, int&gt; orig) {     map&lt;string, int&gt;::iterator im = orig.begin();     while (im != orig.end()) {         cout &lt;&lt; im-&gt;first &lt;&lt; " : " &lt;&lt; im-&gt;second &lt;&lt; endl;         im++;     } }  int main() {     int p;     cin &gt;&gt; p;     string category;     map&lt;string, int&gt; orig; // 保存所有的权限.(原始)      for (int i = 0, j; i &lt; p; ++i) {         cin &gt;&gt; category;         j = category.size();         if (category[j - 2] == ':') {             string tmp;             for (int k = 0; k &lt; j - 2; ++k)                 tmp += category[k];             orig[tmp] = category[j - 1] - '0';         } else orig[category] = -1;     }     int r;     cin &gt;&gt; r;     string ident, categ;     map&lt;string, map&lt;string, int&gt; &gt;man;     for (int i = 0, num; i &lt; r; ++i) {         cin &gt;&gt; ident &gt;&gt; num;         map&lt;string, int&gt; tmp;         for (int j = 0; j &lt; num; ++j) {             cin &gt;&gt; categ;             int t = categ.size();             if (categ[t - 2] == ':') {                 string temp;                 for (int k = 0; k &lt; t - 2; ++k)                     temp += categ[k];                 tmp[temp] = categ[t - 1] - '0';             } else tmp[categ] = -1;         }         man[ident] = tmp;     }     /*cout &lt;&lt; "-----------------------------" &lt;&lt; endl;     map&lt;string, map&lt;string, int&gt; &gt;::iterator im = man.begin();     while (im != man.end()) {         cout &lt;&lt; im-&gt;first &lt;&lt; endl;         show(im-&gt;second);         cout &lt;&lt; endl;         im++;     }*/     int u, t;     cin &gt;&gt; u;     string name, job;     map&lt;string, vector&lt;string&gt; &gt; user;     for (int i = 0; i &lt; u; ++i) {         vector&lt;string&gt; tmp;         cin &gt;&gt; name;         cin &gt;&gt; t;         for (int j = 0; j &lt; t; ++j) {             cin &gt;&gt; job;             tmp.push_back(job);         }         user[name] = tmp;     }     /*cout &lt;&lt; "----------------------------\n";     map&lt;string, vector&lt;string&gt; &gt;::iterator iu = user.begin();     while (iu != user.end()) {         for (int i = 0; i &lt; iu-&gt;second.size(); ++i) {             cout &lt;&lt; iu-&gt;second[i] &lt;&lt; ' ';         }         cout &lt;&lt; endl;         iu++;     }     cout &lt;&lt; "----------------------------\n";*/     int q;     cin &gt;&gt; q;     for (int i = 0; i &lt; q; ++i) {         cin &gt;&gt; name &gt;&gt; categ;         string cmd; // 权限名称          int level, l; // 权限等级          l = categ.size();         if (categ[l - 2] != ':') cmd = categ, level = -1;         else {             for (int k = 0; k &lt; l - 2; ++k)                 cmd += categ[k];             level = categ[l - 1] - '0';         }         //cout &lt;&lt; "name = " &lt;&lt; name &lt;&lt; "  cmd = " &lt;&lt; cmd &lt;&lt; endl;         if (user.count(name) == 0 || orig.count(cmd) == 0) {             cout &lt;&lt; "false" &lt;&lt; endl;             continue;         }         vector&lt;string&gt; jobs = user[name];         /*cout &lt;&lt; "\n" &lt;&lt; name &lt;&lt; " : \n";         for (int j = 0; j &lt; jobs.size(); ++j) {             cout &lt;&lt; jobs[j] &lt;&lt; endl;         }*/         //cout &lt;&lt; "name = " &lt;&lt; name &lt;&lt; "  cmd = " &lt;&lt; cmd &lt;&lt; endl;         if (level == -1) { // 查询本身没有等级              if (orig[cmd] == -1) { // 权限本身没有等级                  //cout &lt;&lt; "again name = " &lt;&lt; name &lt;&lt; " cmd = " &lt;&lt; cmd &lt;&lt; endl;                 bool flag = false;                  for (int j = 0; j &lt; jobs.size(); ++j) {                     string jb = jobs[j]; // cao, 这里j写成i                      //cout &lt;&lt; "jb = " &lt;&lt; jb &lt;&lt; endl;                     map&lt;string, int&gt; now = man[jb];                     if (now.count(cmd) == 1) flag = true;                 }                 if (flag) cout &lt;&lt; "true" &lt;&lt; endl;                 else cout &lt;&lt; "false" &lt;&lt; endl;             } else { // 查询没有等级,但是实际上有等级                  int lev = -1;                 for (int j = 0; j &lt; jobs.size(); ++j) {                     string jb = jobs[j];                     map&lt;string, int&gt; now = man[jb];                     if (now.count(cmd) == 1) {                         lev = max(lev, now[cmd]);                     }                 }                 if (lev == -1) {                     cout &lt;&lt; "false" &lt;&lt; endl;                 } else cout &lt;&lt; lev &lt;&lt; endl;             }          } else {             int lev = -1;             for (int j = 0; j &lt; jobs.size(); ++j) {                 string jb = jobs[j];                 map&lt;string, int&gt; now = man[jb];                 if (now.count(cmd) == 1) {                     lev = max(lev, now[cmd]);                 }             }             if (lev &gt;= level &amp;&amp; lev != -1) cout &lt;&lt; "true" &lt;&lt; endl;             else cout &lt;&lt; "false" &lt;&lt; endl;         }     } }                                            