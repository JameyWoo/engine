                                                                                                                                                         find函数和distance函数都是算法库里的函数  包含在头文件algorithm中, 算是STL的内容  只介绍最简单的用法  find函数有三个参数, 分别代表  (起点, 终点后一位, 要找的数)  返回一个地址  可以是容器, 或者数组  如果没有找到, 则返回终点后一位的地址  找到了, 返回区间[first,end)中第一个值等于value的元素的地址  进阶版本是find_if()函数  #include &lt;bits/stdc++.h&gt; using namespace std;  int main() {     vector &lt;int&gt; v;     for(int i = 0; i &lt; 10; ++i) {         v.push_back(i);     }     vector &lt;int&gt; ::iterator it = find(v.begin(), v.end(), 9);     if(it != v.end()) cout &lt;&lt; "在当前vector中\n";     else cout &lt;&lt; "不在当前vector中\n";     cout &lt;&lt; endl;      int a[10];     for(int i = 0; i &lt; 10; ++i)         a[i] = i;     int *p =  find(a, a + 10, 10);     if(p == a+10) cout &lt;&lt; "不在这个数组中\n";     else cout &lt;&lt; "在这个数组中\n"; }  find_if()函数    #include &lt;bits/stdc++.h&gt; using namespace std;  bool cmp(int n) {     return (n &gt; 3 &amp;&amp; n &lt; 19); }  int main() {     int a[10];     for(int i = 0; i &lt; 10; ++i) {         a[i] = i;     }     cout &lt;&lt; *find_if(a, a+10, cmp); }  distance是返回容器中两个地址之间的距离  参数为(地址, 地址)  返回值为整型  #include &lt;bits/stdc++.h&gt; using namespace std;  int main() {     int a[10];     int dis = distance(a, a+2);     cout &lt;&lt; "距离为: " &lt;&lt; dis &lt;&lt; endl;       for(int i = 0; i &lt; 10; ++i) {         a[i] = i;     }     cout &lt;&lt; "该数组中, 2和7的距离是: \n";     cout &lt;&lt; distance(find(a, a+10, 2), find(a, a+10, 7)); }  参考资料  1  2                                            