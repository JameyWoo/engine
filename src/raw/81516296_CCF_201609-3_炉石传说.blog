                                                                                                                                                         201609-3 炉石传说 传送门  纯粹的模拟题, 按照规则一步步来模拟即可, 然而辣鸡的我之得了90分, 找了好久没有找出那10分的bug.  要注意的一点是: 操作数可能为0  还是贴一贴90分的辣鸡代码, 毕竟是一个一个敲出来的  #include &lt;algorithm&gt; #include &lt;iostream&gt; #include &lt;vector&gt; using namespace std;  struct Man {     int position, attack, health;     Man(int p, int a, int h) : position(p), attack(a), health(h) {} }; vector&lt;Man&gt; man[2];  bool cmp(Man x, Man y) {     return x.position &lt; y.position; }  void show(vector&lt;Man&gt; man[2]) {     sort(man[0].begin() + 1, man[0].end(), cmp);     sort(man[1].begin() + 1, man[1].end(), cmp);     cout &lt;&lt; man[0][0].health &lt;&lt; endl &lt;&lt; man[0].size() - 1;     for (int i = 1; i &lt; man[0].size(); ++i)         cout &lt;&lt; ' ' &lt;&lt; man[0][i].health;     cout &lt;&lt; endl &lt;&lt; man[1][0].health &lt;&lt; endl &lt;&lt; man[1].size() - 1;     for (int i = 1; i &lt; man[1].size(); ++i)         cout &lt;&lt; ' ' &lt;&lt; man[1][i].health;     cout &lt;&lt; endl; }  int main() {     man[0].push_back(Man(0, 0, 30));     man[1].push_back(Man(0, 0, 30));     int n, time = 0, me = 0, you = 1;     cin &gt;&gt; n;     while (time != n) {         string cmd;         while (cin &gt;&gt; cmd) {             time++;             if (cmd == "summon") {                 int position, attack, health;                 cin &gt;&gt; position &gt;&gt; attack &gt;&gt; health;                 for (int i = 1; i &lt; man[me].size(); ++i)                     if (man[me][i].position &gt;= position) man[me][i].position++;                 man[me].push_back(Man(position, attack, health));             } else if (cmd == "attack") {                 int att_me, att_you, m, y;                 cin &gt;&gt; att_me &gt;&gt; att_you;                 for (int i = 1; i &lt; man[me].size(); ++i)                     if (man[me][i].position == att_me) m = i;                 for (int i = 0; i &lt; man[you].size(); ++i)                     if (man[you][i].position == att_you) y = i;                 man[me][m].health -= man[you][y].attack;                 man[you][y].health -= man[me][m].attack;                 if (man[me][m].health &lt;= 0) {                     man[me].erase(man[me].begin() + m);                     for (int i = 1; i &lt; man[me].size(); ++i) {                         if (man[me][i].position &gt; att_me) man[me][i].position--;                     }                 }                 if (att_you != 0 &amp;&amp; man[you][att_you].health &lt;= 0) {                     man[you].erase(man[you].begin() + y);                     for (int i = 1; i &lt; man[you].size(); ++i) {                         if (man[you][i].position &gt; att_you) man[you][i].position--;                     }                 }                 if (att_you == 0 &amp;&amp; man[you][0].health &lt;= 0) {                     cout &lt;&lt; (me == 0 ? 1 : -1) &lt;&lt; endl;                     show(man);                     return 0;                 }             } else if (cmd == "end") break;             if (time == n) {                 cout &lt;&lt; 0 &lt;&lt; endl;                 show(man);                 return 0;             }         }         swap(me, you);     }     cout &lt;&lt; 0 &lt;&lt; endl;     show(man);     return 0; }                                            