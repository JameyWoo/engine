                                                                                                                                                         urllib.parse模块    url框架分析  关键是url分几块, 每一块是用来干什么的. 这些应该明白  首先一个样例  ‘https://www.baidu.com/s?ie=UTF-8&amp;wd=%E5%BC%95%E6%93%8E’  这是一个百度搜索url, 中文关键词是”引擎”, 粘贴过来因为编码是url的, 所以不显示中文,可以用unquote()方法进行解码.    下面是parse中的部分方法    1.urlparse()方法  parse是分析的意思 将url解析, 返回一个urllib.parse.ParseResult类对象  urllib.parse.urlparse(urlstring[, scheme='', allow_fragments=True])  urlstring: 必填, 带解析的url scheme: 作为默认的协议, 如果链接中没有scheme信息, 则使用这个的值作为协议信息 allow_fragments: 是否忽略掉fragment, 如果设置成False, 那么fragment就会被忽略  ``` from urllib.parse import urlparse  result = urlparse('https://www.baidu.com/s?ie=UTF-8&amp;wd=%E5%BC%95%E6%93%8E', scheme='http') print(type(result), result) ```  结果是        2.urlunparse()方法  这个方法和urlparse()方法对立, 接受一个可迭代对象, 长度必须为6, 否则会抛出参数数量出错问题.    from urllib.parse import urlparse, urlunparse  result = urlparse('https://www.baidu.com/s?ie=UTF-8&amp;wd=%E5%BC%95%E6%93%8E', scheme='http') print(type(result), result)  data = ['https', 'www.baidu.com', '/s', '', 'ie=UTF-8&amp;wd=%E5%BC%95%E6%93%8E', ''] test = urlunparse(data) print(test)       其他方法  3.urlsplit()  4.urlunsplit()  5.urljoin()  6.urlencode()  7.parse_qs()  8.parse_qsl()  9.quote()  10.unquote()                                            