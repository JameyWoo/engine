                                                                                                                   贝叶斯方法完整代码 import seaborn as sns   iris = sns.load_dataset('iris')  X_iris = iris.drop('species', axis=1) y_iris = iris['species']  print(X_iris) from sklearn.cross_validation import train_test_split Xtrain, Xtest, ytrain, ytest = train_test_split(X_iris, y_iris, random_state=1)  from sklearn.naive_bayes import GaussianNB model = GaussianNB() model.fit(Xtrain, ytrain) y_model = model.predict(Xtest)  from sklearn.metrics import accuracy_score accuracy_score(ytest, y_model)   步骤分析 一-首先获取数据. 这里我们在线导入seaborn库的iris(鸢尾花)数据 import seaborn as sns iris = sns.load_dataset('iris')  这是github上的说明, 可直接下载csv文件 二-将数据格式化 X_iris = iris.drop('species', axis=1) y_iris = iris['species']  将类别那一列删除生成新的对象赋值给X_iris, y_iris为分类. pandas的drop方法参考 三-将数据切分为训练数据和测试数据 from sklearn.cross_validation import train_test_split Xtrain, Xtest, ytrain, ytest = train_test_split(X_iris, y_iris, random_state=1)  cross validation是交叉验证的意思, 参考文章 参数random_state是固定的随机种子, 参考文章 四-调用高斯朴素贝叶斯实现训练 from sklearn.naive_bayes import GaussianNB model = GaussianNB() model.fit(Xtrain, ytrain) y_model = model.predict(Xtest) # 进行预测  调用Gaussian naive Bayes模型, 并进行拟合, 预测 五-对测试结果进行评估 评估方法介绍 from sklearn.metrics import accuracy_score accuracy_score(ytest, y_model)  得到准确率为0.9736842105263158 metrics是指标的意思. 说明对特征明显的数据, 即使是非常简单的分类算法也可以高效地进行分析.                                              