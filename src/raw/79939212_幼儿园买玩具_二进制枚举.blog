                                                                                                                                                         .  幼儿园买玩具  蒜厂幼儿园有 nn 个小朋友，每个小朋友都有自己想玩的玩具。身为幼儿园园长的你决定给幼儿园买一批玩具，由于经费有限，你只能买 mm 个玩具。已知玩具商店一共卖 kk 种玩具，编号为 1,2,3,…k1,2,3,…k，你让每个小朋友把想玩的玩具编号都写在了纸上。你希望满足尽可能多的小朋友的需求，请计算出最多同时能满足多少个小朋友的玩具需求。  输入格式  第一行，输入三个整数 n,m,k(1 \leq n \leq 100, 1 \leq m \leq k \leq 15)n,m,k(1≤n≤100,1≤m≤k≤15)，中间用空格分开。  接下来 nn 行，第 i+1(0 \leq i &lt; n)i+1(0≤i &lt; n) 行的第一个数字 a_ia   i  ​     代表第 ii 个小朋友想玩的玩具数量，接下来有 a_ia   i  ​     个数字，代表这 a_ia   i  ​     个玩具的编号。  输出格式  输出一个整数，表示最多能满足多少小朋友的玩具需求。  样例输入  5 3 5  2 1 4  0  2 3 1  3 2 3 4  2 4 5  样例输出  3  比较简单的二进制枚举题目. 暴力枚举然后条件判断  Warning: 数组a一定要初始化 ! 初始化 ! 初始化 !  #include &lt;iostream&gt; #include &lt;assert.h&gt; #include &lt;vector&gt; using namespace std; const int INF = 0x3f3f3f3f;  int main() {     int n, m, k, a[105][16] = {}, b[105] = {}, x, Max = -INF;     cin &gt;&gt; n &gt;&gt; m &gt;&gt; k;     for(int i = 1; i &lt;= n; ++i) {         cin &gt;&gt; b[i];         for(int j = 0; j &lt; b[i]; ++j) {             cin &gt;&gt; x;             a[i][x] = 1;         }     }     for(int i = 0; i &lt; (1 &lt;&lt; k); ++i) {         int sum = 0, ans = 0;         vector&lt;int&gt; v;         for(int j = 0; j &lt; k; ++j) {             if(i &amp; (1 &lt;&lt; j)) {                 v.push_back(j + 1);                 sum++;             }         }         if(sum != m) continue;         for(int i = 1; i &lt;= n; ++i) {             int cnt = 0;             for(int j = 0; j &lt; v.size(); ++j) {                 if(a[i][v[j]]) cnt++;             }             if(cnt == b[i]) {                 ans++;             }         }         Max = max(Max, ans);     }     cout &lt;&lt; Max; }                                            